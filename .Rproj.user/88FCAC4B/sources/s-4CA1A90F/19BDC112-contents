# Plan of Attack
# Why's everything gotta be about war tho?

# Goal of Project
# Script 1: Download only the data any regular user would need for some basic 
# Ideally verion is a function that pulls and cleans data based upon DPID input.
# Basic version does this with one site and one dp. Scale from there.

# Script 2: Report that data by Domain 
# Script 3: Automate data pulls from Portal

# Script 1

# Load package-set

library(neonUtilities)
library(tidyverse)
library(ggplot2) # for testing :D
library(lubridate)
library(parallel)
library(here)

# Grab data

# Create Data Product Lookup Table


# So we want this load by product to just grab 1 month at a time, that way 
#   when we automate this, it just grabs the last month, instead of all the months

download.single.temp.func <- function(){
  
  library(neonUtilities)
  library(tidyverse)
  library(ggplot2) # for testing :D
  library(lubridate)
  library(parallel)
  library(lubridate)
  library(here)
  
  # dateTable <- readRDS(file = paste0(here::here(), "/data/lookup/dateTable.RDS"))
  dpLookup <- readRDS(file = paste0(here::here(), "/data/lookup/dpLookup.RDS"))
  siteList <- readRDS(file = paste0(here::here(), "/data/lookup/siteList.RDS"))
  i <- siteList[1]
  i
  for(i in siteList){
    # Grab data from neon portal
    message(paste0("Grabbing ", i, "'s Data now..."))
    t <-neonUtilities::loadByProduct(dpID = dpLookup$dpID[4], 
                                     site = i,
                                     # startdate = as.character(dateTable$startDays[i]),
                                     startdate = "2017-12-25",
                                     # enddate = as.character(dateTable$finalDays[i]),
                                     check.size = FALSE, 
                                     avg = "30"
    )
    
    # Grab just the 30 min avg'ed wind data
    t1 <- t$SAAT_30min
    
    # Format the columsn and save!
    t1$endDateTime <- lubridate::ymd_hms(t1$endDateTime,tz = "UTC") # some files are already posixct tbh
    t1$domainID <- base::as.factor(t1$domainID )
    t1$siteID <- base::as.factor(t1$siteID)
    t1$verticalPosition <- base::as.factor(t1$verticalPosition)
    
    # Construct File Name 
    firstDate <- min(as.Date(t1$startDateTime, format = "%Y-%m-%d"), na.rm = TRUE)
    lastDate <- max(as.Date(t1$startDateTime, format = "%Y-%m-%d"), na.rm = TRUE)
    
    filename <- paste0(t1$domainID[1], "_",t1$siteID[1], "_", dpLookup$dpID[4],"_",firstDate,"_to_",lastDate)
    saveDir <- paste0(here::here(), "/data/",dpLookup$dpID[4],"/")
    # Write file
    fst::write.fst(x = t1, path = paste0(saveDir,filename, ".fst"))
    message(paste0(i," wrote successful!."))
    
  }
}

download.single.temp.func()
